INTERPRETER GRAMMAR:

1) program        → declaration* EOF ;
2) declaration    → varDecl | statement ;
3) statement      → exprStmt | printStmt | block;
4) block          → "{" declaration* "}";
4) varDecl        → "var" IDENTIFIER ( "=" expression )? ";" ;


PARSING GRAMMAR:

1) comma          → expression (","expression)* ; 
2) expression     → assignment ;
3) assignment     → IDENTIFIER "=" assignment | equality;
4) conditional (?:)    → (equality|conditional) ? (primary|conditional) : (primary|conditional) ;   right to left 
5) equality       → comparison ( ( "!=" | "==" ) comparison )* ;
6) comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
7) term           → factor ( ( "-" | "+" ) factor )* ;
8) factor         → unary ( ( "/" | "*" ) unary )* ;
9) unary          → ( "!" | "-" ) unary
               | primary ;
10) primary        → NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")" | IDENTIFIER;